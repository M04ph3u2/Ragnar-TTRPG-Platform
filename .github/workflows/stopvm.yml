name: stopvm

on:
  schedule:
    - cron: '30 21 * * *'

jobs:
  
  backup:
    runs-on: ubuntu-latest

    steps:

      - name: Cloud Backup
        uses: appleboy/ssh-action@master
        with:
          host: cloud.${{ secrets.DOMAIN }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            crontab -l | grep -v '@reboot sudo mv' | crontab -
            cd /root/docker
            sudo docker compose down
            cd /root/data
            sudo chown -R ${{ secrets.SERVER_USERNAME }}:${{ secrets.SERVER_USERNAME }} ./nextcloud
            zip -r ./nextcloud-backup.zip ./nextcloud
            (crontab -l 2>/dev/null; echo "@reboot sudo mv -f /root/data/nextcloud-backup.zip /root/azurestorage/backup/nextcloud-$(date +"%Y-%m-%d").zip") | crontab -
            sudo chown -R www-data:www-data ./nextcloud
            mysqldump -h ${{ secrets.MYSQL_HOST }} -u ${{ secrets.MYSQL_USER }} --password=${{secrets.MYSQL_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} > nextcloud-db-backup.sql
            (crontab -l 2>/dev/null; echo "@reboot sudo mv -f /root/data/nextcloud-db-backup.sql /root/azurestorage/backup/nextcloud-db-$(date +"%Y-%m-%d").sql") | crontab -
            cd /root/azurestorage/backup
            rm -f nextcloud-$(date +"%Y-%m-%d" -d "-4 days").zip nextcloud-$(date +"%Y-%m-%d" -d "-5 days").zip nextcloud-db-$(date +"%Y-%m-%d" -d "-4 days").sql nextcloud-db-$(date +"%Y-%m-%d" -d "-5 days").sql
      
      - name: Webapp Backup
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DOMAIN }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            crontab -l | grep -v '@reboot sudo mv' | crontab -
            cd /root/
            pg_dump --dbname=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD}}@${{ secrets.POSTGRES_HOST }}:5432/${{ secrets.POSTGRES_DATABASE }} > postgres-backup.sql
            (crontab -l 2>/dev/null; echo "@reboot sudo mv -f /root/postgres-backup.sql /root/azurestorage/backup/postgres-$(date +"%Y-%m-%d").sql") | crontab -
            cd /root/azurestorage/backup
            rm -f postgres-$(date +"%Y-%m-%d" -d "-4 days").sql postgres-$(date +"%Y-%m-%d" -d "-5 days").sql
            

  stopvm:
    needs: backup
    runs-on: ubuntu-latest

    steps: 

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az vm stop --resource-group jugglehive --name jugglehive-cloud
            az vm deallocate --resource-group jugglehive --name jugglehive-cloud
            az vm stop --resource-group jugglehive --name jugglehive-webapp
            az vm deallocate --resource-group jugglehive --name jugglehive-webapp
