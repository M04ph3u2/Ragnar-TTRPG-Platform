# ===============================================================================
# Ragnar TTRPG Platform - SSL Certificate Kickstart Nginx Configuration
# ===============================================================================
# This minimal nginx configuration is used specifically for initial SSL
# certificate generation. It only serves HTTP traffic and ACME challenges,
# allowing Let's Encrypt to verify domain ownership before creating certificates.
# 
# Author: Stefano Sciacovelli (https://github.com/M04ph3u2)
# DevOps Infrastructure Implementation
# ===============================================================================

events {
    # Basic worker configuration for certificate generation phase
    # Lower connection limit since this is temporary setup
    worker_connections 1024;
}

http {
    # Hide nginx version for security even during setup
    server_tokens off;
    
    # ============================================================================
    # HTTP-Only Server Block (Certificate Generation Phase)
    # ============================================================================
    # Minimal configuration for Let's Encrypt domain validation:
    # - Serves only HTTP requests on port 80
    # - Provides ACME challenge endpoint for certificate generation
    # - No SSL configuration (certificates don't exist yet)
    # - No application proxy (app not running during kickstart)
    # ============================================================================
    server {
        listen 80;                       # HTTP port for ACME challenges
        server_name $DOMAIN;             # Domain from environment variable

        # Let's Encrypt ACME Challenge Handler
        # This is the only endpoint needed during certificate generation
        # Serves challenge files that prove domain ownership to Let's Encrypt
        location ~ /.well-known/acme-challenge/ {
            root /var/www/certbot;       # Certbot webroot directory
        }
        
        # Optional: Return 200 for other requests during setup
        # This ensures the domain responds correctly during validation
        # location / {
        #     return 200 'SSL certificate generation in progress';
        #     add_header Content-Type text/plain;
        # }
    }

}